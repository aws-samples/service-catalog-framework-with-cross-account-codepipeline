AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  DevOpsAccount:
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "This is a required parameter"
  RoleName:
    Type: String
    Description: Name of the role to be assumed.  It must start with "codebuild-"
    AllowedPattern: "^codebuild-.*"
    ConstraintDescription: Rolename must start with "codebuild-"

Resources:
  codebuildfargate:
    Properties:
      RoleName: !Ref RoleName
      AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: Allow
              Principal:
                AWS: !Sub "arn:aws:iam::${DevOpsAccount}:root"
              Action:
                - sts:AssumeRole
              Condition:
                StringLike:
                  "aws:PrincipalArn": !Sub "arn:aws:iam::${DevOpsAccount}:role/codebuild-*"

      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AutoScalingFullAccess
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
      - arn:aws:iam::aws:policy/AutoScalingConsoleFullAccess
      - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      Path: /
    Type: AWS::IAM::Role
  codebuildfargatePolicyECR:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - ecr:GetAuthorizationToken
          - ecr:BatchCheckLayerAvailability
          - ecr:GetDownloadUrlForLayer
          - ecr:GetRepositoryPolicy
          - ecr:DescribeRepositories
          - ecr:ListImages
          - ecr:DescribeImages
          - ecr:BatchGetImage
          - ecr:InitiateLayerUpload
          - ecr:UploadLayerPart
          - ecr:CompleteLayerUpload
          - ecr:PutImage
          - ecs:DeleteService
          Effect: Allow
          Resource: '*'
          Sid: ECRPermissions
        Version: '2012-10-17'
      PolicyName: codebuildfargatePolicyECR
      Roles:
      - Ref: codebuildfargate
    Type: AWS::IAM::Policy
  codebuildfargatePolicyS3:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - s3:ListStorageLensConfigurations
          - s3:ListAccessPointsForObjectLambda
          - s3:GetAccessPoint
          - s3:PutAccountPublicAccessBlock
          - s3:GetAccountPublicAccessBlock
          - s3:ListAllMyBuckets
          - s3:ListAccessPoints
          - s3:PutAccessPointPublicAccessBlock
          - s3:ListJobs
          - s3:PutStorageLensConfiguration
          - s3:ListMultiRegionAccessPoints
          - s3:CreateJob
          Effect: Allow
          Resource: '*'
          Sid: VisualEditor0
        - Action: s3:*
          Effect: Allow
          Resource: arn:aws:s3:::aws-sam-cli-managed-default-samclisourcebucket*
          Sid: VisualEditor1
        - Action: s3:*
          Effect: Allow
          Resource: arn:aws:s3:::aws-sam-cli-managed-default-samclisourcebucket*/*
          Sid: VisualEditor2
        Version: '2012-10-17'
      PolicyName: codebuildfargatePolicyS3
      Roles:
      - Ref: codebuildfargate
    Type: AWS::IAM::Policy
  codebuildfargatePolicyautoscaling:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:DeregisterScalableTarget
          Effect: Allow
          Resource: !Sub arn:aws:application-autoscaling:*:${AWS::AccountId}:scalable-target/*
          Sid: VisualEditor0
        - Action: application-autoscaling:*
          Effect: Allow
          Resource: '*'
          Sid: VisualEditor1
        Version: '2012-10-17'
      PolicyName: codebuildfargatePolicyautoscaling
      Roles:
      - Ref: codebuildfargate
    Type: AWS::IAM::Policy
  codebuildfargatePolicyec2:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - ec2:DescribeVpcs
          - ec2:DescribeSubnets
          - ec2:DeleteSecurityGroup
          - ec2:CreateSecurityGroup
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:createTags
          Effect: Allow
          Resource: '*'
          Sid: VisualEditor0
        Version: '2012-10-17'
      PolicyName: codebuildfargatePolicyec2
      Roles:
      - Ref: codebuildfargate
    Type: AWS::IAM::Policy
  codebuildfargatePolicyecs:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - ecs:DeregisterTaskDefinition
          - ecs:RegisterTaskDefinition
          - ecs:RegisterContainerInstance
          - ecs:DeregisterContainerInstance
          - ecs:DescribeServices
          - ecs:UpdateService
          - ecs:DescribeClusters
          - ecs:CreateCluster
          - ecs:DeleteCluster
          - ecs:CreateService
          Effect: Allow
          Resource: '*'
          Sid: VisualEditor0
        Version: '2012-10-17'
      PolicyName: codebuildfargatePolicyecs
      Roles:
      - Ref: codebuildfargate
    Type: AWS::IAM::Policy
  codebuildfargatePolicyiam:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - iam:PassRole
          - iam:GetRole
          - iam:DetachRolePolicy
          - iam:CreateRole
          - iam:DeleteRole
          - iam:AttachRolePolicy
          Effect: Allow
          Resource: arn:aws:iam::179892604958:role/*
          Sid: VisualEditor0
        Version: '2012-10-17'
      PolicyName: codebuildfargatePolicyiam
      Roles:
      - Ref: codebuildfargate
    Type: AWS::IAM::Policy
